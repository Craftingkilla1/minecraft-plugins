// ./Example-Plugin/build.gradle
description = 'Example plugin demonstrating Core-Utils and SQL-Bridge functionality'

dependencies {
    // Core dependencies
    compileOnly "org.spigotmc:spigot-api:${rootProject.ext.minecraftVersion}"
    
    // Internal project dependencies - use the actual package names
    // Make sure these match the actual package structure
    implementation project(':Core-Utils')
    implementation project(':Sql-Bridge')
    
    // Optional: Add any additional dependencies specific to this plugin
    // For example, if you need a particular library:
    // implementation 'com.example:library:1.0.0'
    
    // Test dependencies are already included from the parent build
    
    // Lombok for reducing boilerplate (optional)
    compileOnly "org.projectlombok:lombok:${rootProject.ext.lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${rootProject.ext.lombokVersion}"
}

// Process resources (plugin.yml) with version placeholder
processResources {
    filesMatching('plugin.yml') {
        expand(
            'version': project.version,
            'name': project.name,
            'description': project.description
        )
    }
}

// Shadow JAR customization if needed
shadowJar {
    // You can customize the shadow JAR here if needed
    // For example, excluding or relocating packages
    
    // Ensure Core-Utils and Sql-Bridge are excluded from the shadow JAR
    // as they will be provided by the server
    dependencies {
        exclude(dependency('com.minecraft:core-utils'))
        exclude(dependency('com.minecraft:sql-bridge'))
    }
}

// Javadoc customization if needed
javadoc {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

// Additional tasks for development workflow

// Task to copy the plugin to a local test server (optional)
task copyToServer(type: Copy, dependsOn: shadowJar) {
    from shadowJar.archiveFile
    into file("${project.rootDir}/test-server/plugins")
    doLast {
        println "Copied ${shadowJar.archiveFileName.get()} to test server plugins folder"
    }
}

// Run this task for quick local testing
task testPlugin(dependsOn: [clean, shadowJar, copyToServer]) {
    group = 'verification'
    description = 'Build and copy the plugin to the test server'
}